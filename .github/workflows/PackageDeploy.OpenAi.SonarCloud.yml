name: SonarLint.Rystem.OpenAi
on:
  push:
    branches:
      - master
  issue_comment:
    types: [created, edited, deleted]
jobs:
  analyze:
    runs-on: windows-latest
    environment: OpenAi.Nuget
    if: contains(github.event.head_commit.message, '/sonar') 
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
            .\.sonar\scanner\dotnet-sonarscanner begin /k:"KeyserDSoze_Rystem.OpenAi" /o:"keyserdsoze" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
            dotnet build "src/Rystem.OpenAi.Api/Rystem.OpenAi.Api.csproj" –no-incremental -c Debug
            dotnet build "src/Rystem.OpenAi.Test/Rystem.OpenAi.Test.csproj" –no-incremental -c Debug
            $Env:OpenAiApiKey='${{ secrets.OpenAi_ApiKey }}'
            $Env:AzureApiKey='${{ secrets.Azure_ApiKey }}'
            $Env:AzureResourceName='${{ secrets.Azure_ResourceName }}'
            $Env:Azure2ApiKey='${{ secrets.Azure2_ApiKey }}'
            $Env:Azure2ResourceName='${{ secrets.Azure2_ResourceName }}'
            $Env:AzureADClientId='${{ secrets.Azure_AD_ClientId }}'
            $Env:AzureADClientSecret='${{ secrets.Azure_AD_ClientSecret }}'
            $Env:AzureADTenantId='${{ secrets.Azure_AD_TenantId }}'
            dotnet dotcover test "src/Rystem.OpenAi.Test/Rystem.OpenAi.Test.csproj" --dcReportType=HTML
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"